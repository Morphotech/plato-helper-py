[tox]
envlist = mypy,pylint,py3.7,py3.8,py3.9, py3.10,coverage
isolated_build = True
skipsdist = true

[testenv]
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install
commands =
    poetry run python -m unittest -v

[testenv:pylint]
deps = pylint

commads_pre =
    poetry install
commands =
    poetry run pylint --rcfile=conf/.pylintrc plato_helper_py

[testenv:mypy]
deps = mypy
commands_pre =
    poetry install
commands =
    poetry run mypy --config-file conf/mypy.ini plato_helper_py

[testenv:coverage]
commands_pre =
    poetry install
commands =
    poetry run coverage erase
    poetry run coverage run -m unittest
    poetry run coverage xml -i -o plato_helper_py/coverage/coverage.xml

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3
